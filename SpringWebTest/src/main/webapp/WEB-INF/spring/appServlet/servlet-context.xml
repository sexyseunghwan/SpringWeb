<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- ViewResolver -->
	<!-- ViewResolver 의 역할 
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		두개가 setter 역할이잖아.
		- return "ex04"; 리턴문이 실행되는 순간 ViewResolver가 호출된다.
		- ex04 전달 -> /WEB-INF/views/ 이게 앞에 붙음 그리고 .jsp 이게 뒤에 붙음
		-  /WEB-INF/views/ex04.jsp 이런식으로 보내줘버리는거임
		- 스프링이 알아서 클래스를 만들어 놓은것이다.
	-->
 	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.test.spring" />
	
	<!-- 빈 생성 -->
	<!-- "he" -->
	<!--서블릿 역할 하는놈의 이름을 적어라  -->
	<beans:bean class="com.test.spring.Hello" name="/hello.action"></beans:bean>
	
	<!-- 컨트롤러를 호출한 bean 객체를 만들어야 한다 -->
	<beans:bean class="com.test.spring.Ex01" name="/ex01.action"></beans:bean>
	
	<!-- 호출할 컨트롤러의 가상 경로를 name으로 하는 <bean> 태그 선언 -->
	<!-- 
		1. 브라우저에 요청
		2. DispatcherServlet 이 요청을 받아 ~.action 이라는 주소를 확인한다
		3. DispatcherServlet 이 확인된 ~.action 이라는 주소를 가지고 servlet-context 내에 들어있는 모든 <bean> 태그의 name 값과 비교해서 동일한 
		<bean> 태그를 찾는다.
		4. 찾은 <bean> 태그를 getBean() 메소드를 사용해서 해당 클래스의 객체를 만든다.
		5. 만들어진 객체의 handleRequest() 메서드를 호출하여 작업을 진행한다...
		
		의존주입을 해줘야한다.(***)
		
	 -->
	 
	 <!-- bean 태그를 하나 더 만들어본다. -->
	 <!-- 의존객체 -->
	<beans:bean id="dao" class = "com.test.spring.TestDAO"></beans:bean>
	
	<beans:bean class="com.test.spring.Ex03Controller" name="/ex03.action">
		<beans:constructor-arg ref="dao"></beans:constructor-arg><!-- 생성자 사용할때 사용 의존주입한다.-->
		<!-- <beans:property name="dao" ref="dao"> --><!-- 이거 왜 안되냐? -->
		<!-- setter을 사용할때 사용  set을 지우고 케멀표기법 대문자를 소문자로 변환-->
	</beans:bean>
	

</beans:beans>
